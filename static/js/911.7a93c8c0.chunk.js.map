{"version":3,"file":"static/js/911.7a93c8c0.chunk.js","mappings":"oIAKA,IALoB,CAClBA,SAAU,6BACVC,QAAS,mC,0HCAEC,EAAWC,EAAAA,GAAAA,IAAH,gEAKRC,EAAYD,EAAAA,GAAAA,EAAH,6CAITE,EAAiBF,EAAAA,GAAAA,EAAH,6C,SCT3B,ECGiB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACVC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAE5B,OACE,2BACE,SAACP,EAAD,CACEQ,IACmB,OAAjBH,EATR,2EASQ,0CAEuCA,GAEzCI,IAAKH,EACLI,MAAM,SAER,SAACR,EAAD,UAAYI,KACZ,UAACH,EAAD,yBAA4BI,OAGjC,E,sDCnBOT,EAAsBa,EAAAA,EAAAA,SAAZZ,EAAYY,EAAAA,EAAAA,QAEfC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,kGAE2BC,EAAAA,EAAAA,IAAA,UAClBhB,EADkB,oBACEe,EADF,4BAC6Bd,EAD7B,oBAF3B,cAEUgB,EAFV,OAMUC,EAAOD,EAASC,KAN1B,kBAQWA,GARX,gCAUIC,QAAQC,MAAR,MAVJ,gFAcA,I,EAAA,EAhBA,SAE8B,GAAfN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECJFO,EAAWlB,EAAAA,GAAAA,GAAH,6CCArB,ECQa,WACX,OAAwBmB,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAUR,OARAa,EAAAA,EAAAA,YAAU,WACRF,GAAa,GACbZ,EAAeC,GACZc,MAAK,gBAAGN,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,IACLO,OAAM,SAAAV,GAAK,OAAIA,CAAJ,IACXW,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,CAACX,IAEAU,GACK,SAACO,EAAA,EAAD,IAGW,IAAhBT,EAAKU,QACA,8CAIP,SAACZ,EAAD,UACGE,EAAKW,KAAI,SAAA5B,GACR,OAAO,SAAC,EAAD,CAAUA,MAAOA,GAAYA,EAAM6B,QAC3C,KAGN,C","sources":["base.js","components/CastItem/CastItem.styled.jsx","components/CastItem/index.js","components/CastItem/CastItem.jsx","fetchRequests/fetchMovieCast.jsx","pages/Cast/Cast.styled.jsx","pages/Cast/index.js","pages/Cast/Cast.jsx"],"sourcesContent":["const requestData = {\n  BASE_URL: 'https://api.themoviedb.org',\n  API_KEY: 'f23afa13cf10e0a13fa8c4a5195ece8b',\n};\n\nexport default requestData;\n","import styled from 'styled-components';\n\nexport const ActorPic = styled.img`\n  display: block;\n  margin: 20px 0 0;\n`;\n\nexport const ActorName = styled.p`\n  margin: 20px 0 0;\n`;\n\nexport const MovieCharacter = styled.p`\n  margin: 20px 0 0;\n`;\n","import CastItem from './CastItem';\n\nexport default CastItem;\n","import { ActorPic, ActorName, MovieCharacter } from './CastItem.styled';\n\nconst defaultActorPic =\n  'https://upload.wikimedia.org/wikipedia/commons/7/72/Default-welcomer.png';\n\nconst CastItem = ({ actor }) => {\n  const { profile_path, name, character } = actor;\n\n  return (\n    <li>\n      <ActorPic\n        src={\n          profile_path === null\n            ? defaultActorPic\n            : `https://image.tmdb.org/t/p/w500/${profile_path}`\n        }\n        alt={name}\n        width=\"200\"\n      />\n      <ActorName>{name}</ActorName>\n      <MovieCharacter>Character: {character}</MovieCharacter>\n    </li>\n  );\n};\n\nexport default CastItem;\n","import axios from 'axios';\n\nimport requestData from 'base';\n\nconst { BASE_URL, API_KEY } = requestData;\n\nasync function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = response.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default fetchMovieCast;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\n","import Cast from './Cast';\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CastItem from 'components/CastItem';\nimport Loader from 'components/Loader';\n\nimport fetchMovieCast from 'fetchRequests/fetchMovieCast';\n\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieCast(movieId)\n      .then(({ cast }) => setCast(cast))\n      .catch(error => error)\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (cast.length === 0) {\n    return <div>No information.</div>;\n  }\n\n  return (\n    <CastList>\n      {cast.map(actor => {\n        return <CastItem actor={actor} key={actor.cast_id} />;\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","ActorPic","styled","ActorName","MovieCharacter","actor","profile_path","name","character","src","alt","width","requestData","fetchMovieCast","movieId","axios","response","data","console","error","CastList","useState","cast","setCast","isLoading","setIsLoading","useParams","useEffect","then","catch","finally","Loader","length","map","cast_id"],"sourceRoot":""}